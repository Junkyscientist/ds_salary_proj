{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('salary_data_cleaned.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Job Title</th>\n",
       "      <th>Salary Estimate</th>\n",
       "      <th>Job Description</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Company Name</th>\n",
       "      <th>Location</th>\n",
       "      <th>Headquarters</th>\n",
       "      <th>Size</th>\n",
       "      <th>Founded</th>\n",
       "      <th>Type of ownership</th>\n",
       "      <th>...</th>\n",
       "      <th>avg_salary</th>\n",
       "      <th>company_txt</th>\n",
       "      <th>job_state</th>\n",
       "      <th>same_state</th>\n",
       "      <th>age</th>\n",
       "      <th>python_yn</th>\n",
       "      <th>R_ym</th>\n",
       "      <th>spark</th>\n",
       "      <th>aws</th>\n",
       "      <th>excel</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Sr. Data Scientist - Model Governance</td>\n",
       "      <td>$101K-$163K (Glassdoor est.)</td>\n",
       "      <td>General Summary:\\n\\nThe position plays a criti...</td>\n",
       "      <td>3.6</td>\n",
       "      <td>Elevate Credit\\n3.6</td>\n",
       "      <td>Addison, TX</td>\n",
       "      <td>-1</td>\n",
       "      <td>501 to 1000 Employees</td>\n",
       "      <td>2014</td>\n",
       "      <td>Company - Public</td>\n",
       "      <td>...</td>\n",
       "      <td>132.0</td>\n",
       "      <td>Elevate Credit\\n</td>\n",
       "      <td>Addison</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Customer Data Scientist</td>\n",
       "      <td>$101K-$163K (Glassdoor est.)</td>\n",
       "      <td>We are looking for a Customer Data Scientist t...</td>\n",
       "      <td>4.6</td>\n",
       "      <td>Smartly.io\\n4.6</td>\n",
       "      <td>New York, NY</td>\n",
       "      <td>-1</td>\n",
       "      <td>201 to 500 Employees</td>\n",
       "      <td>2013</td>\n",
       "      <td>Company - Private</td>\n",
       "      <td>...</td>\n",
       "      <td>132.0</td>\n",
       "      <td>Smartly.io\\n</td>\n",
       "      <td>New York</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Data Engineer</td>\n",
       "      <td>$101K-$163K (Glassdoor est.)</td>\n",
       "      <td>Location: Washington, District of Columbia, Un...</td>\n",
       "      <td>4.5</td>\n",
       "      <td>Applied Information Sciences\\n4.5</td>\n",
       "      <td>Washington, DC</td>\n",
       "      <td>-1</td>\n",
       "      <td>501 to 1000 Employees</td>\n",
       "      <td>1982</td>\n",
       "      <td>Company - Private</td>\n",
       "      <td>...</td>\n",
       "      <td>132.0</td>\n",
       "      <td>Applied Information Sciences\\n</td>\n",
       "      <td>Washington</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Data Scientist</td>\n",
       "      <td>$101K-$163K (Glassdoor est.)</td>\n",
       "      <td>Job Description:\\n\\nMetron is seeking talented...</td>\n",
       "      <td>3.0</td>\n",
       "      <td>Metron, Inc.\\n3.0</td>\n",
       "      <td>Reston, VA</td>\n",
       "      <td>-1</td>\n",
       "      <td>51 to 200 Employees</td>\n",
       "      <td>-1</td>\n",
       "      <td>Company - Private</td>\n",
       "      <td>...</td>\n",
       "      <td>132.0</td>\n",
       "      <td>Metron, Inc.\\n</td>\n",
       "      <td>Reston</td>\n",
       "      <td>0</td>\n",
       "      <td>-1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>DATA SCIENTIST</td>\n",
       "      <td>$101K-$163K (Glassdoor est.)</td>\n",
       "      <td>JOB SUMMARY\\n\\nThe position will focus on buil...</td>\n",
       "      <td>3.8</td>\n",
       "      <td>Blessing Hospital\\n3.8</td>\n",
       "      <td>Quincy, IL</td>\n",
       "      <td>-1</td>\n",
       "      <td>1001 to 5000 Employees</td>\n",
       "      <td>1875</td>\n",
       "      <td>Nonprofit Organization</td>\n",
       "      <td>...</td>\n",
       "      <td>132.0</td>\n",
       "      <td>Blessing Hospital\\n</td>\n",
       "      <td>Quincy</td>\n",
       "      <td>0</td>\n",
       "      <td>145</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               Job Title               Salary Estimate  \\\n",
       "0  Sr. Data Scientist - Model Governance  $101K-$163K (Glassdoor est.)   \n",
       "1                Customer Data Scientist  $101K-$163K (Glassdoor est.)   \n",
       "2                          Data Engineer  $101K-$163K (Glassdoor est.)   \n",
       "3                         Data Scientist  $101K-$163K (Glassdoor est.)   \n",
       "4                         DATA SCIENTIST  $101K-$163K (Glassdoor est.)   \n",
       "\n",
       "                                     Job Description  Rating  \\\n",
       "0  General Summary:\\n\\nThe position plays a criti...     3.6   \n",
       "1  We are looking for a Customer Data Scientist t...     4.6   \n",
       "2  Location: Washington, District of Columbia, Un...     4.5   \n",
       "3  Job Description:\\n\\nMetron is seeking talented...     3.0   \n",
       "4  JOB SUMMARY\\n\\nThe position will focus on buil...     3.8   \n",
       "\n",
       "                        Company Name        Location  Headquarters  \\\n",
       "0                Elevate Credit\\n3.6     Addison, TX            -1   \n",
       "1                    Smartly.io\\n4.6    New York, NY            -1   \n",
       "2  Applied Information Sciences\\n4.5  Washington, DC            -1   \n",
       "3                  Metron, Inc.\\n3.0      Reston, VA            -1   \n",
       "4             Blessing Hospital\\n3.8      Quincy, IL            -1   \n",
       "\n",
       "                     Size  Founded       Type of ownership  ... avg_salary  \\\n",
       "0   501 to 1000 Employees     2014        Company - Public  ...      132.0   \n",
       "1    201 to 500 Employees     2013       Company - Private  ...      132.0   \n",
       "2   501 to 1000 Employees     1982       Company - Private  ...      132.0   \n",
       "3     51 to 200 Employees       -1       Company - Private  ...      132.0   \n",
       "4  1001 to 5000 Employees     1875  Nonprofit Organization  ...      132.0   \n",
       "\n",
       "                      company_txt   job_state  same_state  age  python_yn  \\\n",
       "0                Elevate Credit\\n     Addison           0    6          1   \n",
       "1                    Smartly.io\\n    New York           0    7          1   \n",
       "2  Applied Information Sciences\\n  Washington           0   38          0   \n",
       "3                  Metron, Inc.\\n      Reston           0   -1          1   \n",
       "4             Blessing Hospital\\n      Quincy           0  145          1   \n",
       "\n",
       "   R_ym  spark  aws excel  \n",
       "0     0      0    0     0  \n",
       "1     0      0    0     0  \n",
       "2     0      1    0     1  \n",
       "3     0      0    0     1  \n",
       "4     0      0    1     1  \n",
       "\n",
       "[5 rows x 28 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'Index' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-4-ea942bf769f0>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdf\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: 'Index' object is not callable"
     ]
    }
   ],
   "source": [
    "df.columns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'Index' object is not callable",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-5-ea942bf769f0>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdf\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: 'Index' object is not callable"
     ]
    }
   ],
   "source": [
    "df.columns()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Job Title', 'Salary Estimate', 'Job Description', 'Rating',\n",
       "       'Company Name', 'Location', 'Headquarters', 'Size', 'Founded',\n",
       "       'Type of ownership', 'Industry', 'Sector', 'Revenue', 'Competitors',\n",
       "       'hourly', 'employer_provided', 'min_salary', 'max_salary', 'avg_salary',\n",
       "       'company_txt', 'job_state', 'same_state', 'age', 'python_yn', 'R_ym',\n",
       "       'spark', 'aws', 'excel'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "def title_simplifer(title):\n",
    "    if 'data scientist'in title.lower():\n",
    "        return 'data scientist'\n",
    "    elif 'data engineer'in title.lower():\n",
    "        return 'data engineer'\n",
    "    elif 'analyst'in title.lower():\n",
    "        return 'analyst'\n",
    "    elif 'machine learning'in title.lower():\n",
    "        return 'mle'\n",
    "    elif 'manager' in title.lower():\n",
    "        return 'manager'\n",
    "    elif 'director'in title.lower():\n",
    "        return'director'\n",
    "    else:\n",
    "        return 'na'\n",
    "    \n",
    "def seniority(title):\n",
    "    if 'sr' in title.lower() or 'senior'in title.lower() or 'sr'in title.lower() or 'lead' in title.lower() or'principal'in title.lower():\n",
    "        return'senior'\n",
    "    elif 'jr' in title.lower()or 'jr'in title.lower():\n",
    "        return'jr'\n",
    "    else:\n",
    "        return'na'\n",
    "    \n",
    "## job title and seniortiy \n",
    "\n",
    "## Fix state los Angeles\n",
    "\n",
    "## Competitor count\n",
    "\n",
    "## hourly wage to annual\n",
    "\n",
    "#remove new line from job title\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "df['job_simp'] = df['Job Title'].apply(title_simplifer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "data scientist    309\n",
       "analyst            76\n",
       "data engineer      54\n",
       "na                 37\n",
       "mle                20\n",
       "manager             3\n",
       "director            1\n",
       "Name: job_simp, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.job_simp.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "data scientist    309\n",
       "analyst            76\n",
       "data engineer      54\n",
       "na                 37\n",
       "mle                20\n",
       "manager             3\n",
       "director            1\n",
       "Name: seniority, dtype: int64"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['seniority'] = df['Job Title'].apply(title_simplifer)\n",
    "df.seniority.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
